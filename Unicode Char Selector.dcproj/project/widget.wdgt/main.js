/* 
 This file was generated by Dashcode.  
 You may edit this file to customize your widget or web page 
 according to the license.txt file included in the project.
 */

//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to start
//
function load()
{
    dashcode.setupParts();
}

//
// Function: remove()
// Called when the widget has been removed from the Dashboard
//
function remove()
{
    // Stop any timers to prevent CPU usage
    // Remove any preferences as needed
    // widget.setPreferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
}

//
// Function: hide()
// Called when the widget has been hidden
//
function hide()
{
    // Stop any timers to prevent CPU usage
}

//
// Function: show()
// Called when the widget has been shown
//
function show()
{
    // Restart any timers that were stopped on hide
    updateResults();
}

//
// Function: sync()
// Called when the widget has been synchronized with .Mac
//
function sync()
{
    // Retrieve any preference values that you need to be synchronized here
    // Use this for an instance key's value:
    // instancePreferenceValue = widget.preferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
    //
    // Or this for global key's value:
    // globalPreferenceValue = widget.preferenceForKey(null, "your-key");
}

//
// Function: showBack(event)
// Called when the info button is clicked to show the back of the widget
//
// event: onClick event from the info button
//
function showBack(event)
{
    document.getElementById("multiplicator").value = getSliderMultiplicator();
    
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToBack");
    }

    front.style.display = "none";
    back.style.display = "block";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

//
// Function: showFront(event)
// Called when the done button is clicked from the back of the widget
//
// event: onClick event from the done button
//
function showFront(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToFront");
    }
    
    updateResults();
    
    front.style.display="block";
    back.style.display="none";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

if (window.widget) {
    widget.onremove = remove;
    widget.onhide = hide;
    widget.onshow = show;
    widget.onsync = sync;
}





// ------- custom hier...

  hex="0123456789ABCDEF";
  function rechne(inp,to) {
    var inp;
    var out;
    if(to == "dec") {
      out=parseInt(inp,16);
      if(isNaN(out)) {
        alert("Could not convert value to decimal.");
        out="";
      }
    } else {
      inp=parseInt(inp);
      out="";
      if(isNaN(inp)) {
        alert("Could not convert value to hex.");
      } else {
        while(inp != 0) {
          out=hex.charAt(inp%16)+out;
          inp=inp >> 4;
        }
      }
    }
    return(out);
  }

function inputHandler(event)
{
    updateResults();
}

var sliderPos = 0.0;
function sliderHandler(value)
{
    sliderPos = value;
    updateResults();
}

function updateResults()
{
    var sliderPosMult = Math.round(getSliderMultiplicator()*sliderPos);

    document.getElementById("result_code").value = "0x"+rechne(rechne(document.getElementById("base").value.replace("0x",""),'dec')+sliderPosMult,'hex');
    
    document.getElementById("lbl_offset").innerHTML = "+ 0x"+rechne(sliderPosMult,'hex');
    
    document.getElementById("result_sign").value = String.fromCharCode(rechne(document.getElementById("base").value,'dec')+sliderPosMult);
}


function openWebsite(event)
{
    widget.openURL('http://www.philippklaus.de/');
}

var sliderMultiplicator = -1;
function getSliderMultiplicator()
{
    if(window.widget)
    {
        if (sliderMultiplicator != -1)
        {
            return sliderMultiplicator;
        }
        else
        {
            var preset = 10;
            sliderMultiplicator = widget.preferenceForKey("sliderMultiplicator");
            if (sliderMultiplicator == undefined)
            {
                widget.setPreferenceForKey(preset,"sliderMultiplicator");
                sliderMultiplicator = preset;
            }
            return sliderMultiplicator;
        }
    }
}
function setSliderMultiplicator(value)
{
    sliderMultiplicator = value;
    if(window.widget)
    {
        widget.setPreferenceForKey(value,"sliderMultiplicator");

    }
}

function changedMultiplicator(event)
{
    setSliderMultiplicator(event.target.value);
}


function pasteToApplication(event)
{
    // source: http://forums.macosxhints.com/showthread.php?t=46078 and http://forums.macosxhints.com/showthread.php?p=117551#post117551
    
    var sliderPosMult = Math.round(getSliderMultiplicator()*sliderPos);
    //var script = "/usr/bin/osascript -e 'tell application \"System Events\"' -e 'tell process \"finder\"' -e 'activate' -e 'keystroke tab using {command down}' -e 'end tell' -e 'set front_app to (path to frontmost application as Unicode text)' -e 'tell application front_app' -e 'activate' -e 'set clipboardStack to the clipboard' -e 'set the clipboard to \"" + String.fromCharCode(rechne(document.getElementById("base").value,'dec')+sliderPosMult) + "\"' -e 'keystroke \"v\" using {command down}' -e 'set the clipboardStack to d' -e 'end tell' -e 'end tell'";
    //script = "/usr/bin/osascript -e 'beep 5'";
    //script = "/usr/bin/osascript -e 'tell application \"TextEdit\"' -e 'set text of document 1 to text of document 1 & character id 300' -e 'end tell'";
    var script = "/usr/bin/osascript ./bin/paste-char.scpt " + String.fromCharCode(rechne(document.getElementById("base").value,'dec')+sliderPosMult);
    widget.system(script, null);
    //widget.openApplication("com.apple.Dock");
}
